openapi: 3.0.0
info:
  description: |
    Servidor que retorna alertas climatol√≥gicas.
  version: "0.1.0"
  title: ClimAlert
servers:
  - url: 'https://climalert.herokuapp.com/'
    description: "Production server."
  - url: 'http://localhost:5000/'
    description: "Local server."
paths:
  /:
    get:
      responses:
        "200":
          description: "Ping."
          schema:
            type: string
  /usuarios:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUsuario'
      responses:
        "200":
          description: "Returns the created user data."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "400":
          description: "Bad request: User with email already exists."
  /usuarios/{email}:
    get:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Returns the user data with email."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "404":
          description: "Not found: No user with such email."
    put:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUsuario'
      responses:
        "200":
          description: "Returns the updated user data."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "404":
          description: "Not found: No user with such email."
    delete:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
        "404":
          description: "Not found: No user with such email."
  /usuarios/{email}/filtro:
    post:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFiltro'
      responses:
        "200":
          description: ""
  /usuarios/{email}/localizaciones:
    post:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoc'
      responses:
        "200":
          description: ""
  /incidencias:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIncidencia'
      responses:
        "200":
          description: ""
  /usuarios/{email}/notificaciones:
    post:
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNotificacion'
      responses:
        "200":
          description: ""
  /refugios:
    get:
      parameters:
        - name: latitud
          in: query
          required: true
          schema:
            type: number
        - name: longitud
          in: query
          required: true
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refugio"
        "404":
          description: "Not found: No shelters at such coordinates."
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRefugio'
      responses:
        "200":
          description: ""
  /refugios/{nombre}:
    put:
      parameters:
        - name: nombre
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRefugio'
      responses:
        "200":
          description: ""
    delete:
      parameters:
        - name: nombre
          in: path
          required: true
          schema:
            type: string
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""

components:
  schemas:
    Usuario:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        filtro:
          type: object
          properties:
            localizacion1:
              type: object
              properties:
                latitud:
                  type: number
                longitud:
                  type: number
            localizacion2:
              type: object
              properties:
                latitud:
                  type: number
                longitud:
                  type: number
            radioEfecto:
              type: integer
            gravedad:
              type: integer
    Incidencia:
      type: object
      properties:
        x:
          type: string
        y:
          type: string
    Refugio:
      type: object
      properties:
        nombre:
          type: string
        latitud:
          type: number
        longitud:
          type: number
        distancia:
          type: number
    PostFiltro:
      type: object
      properties:
        password:
          type: number
    PostUsuario:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    PutUsuario:
      type: object
      properties:
        password:
          type: string
        gravedad:
          type: boolean
        radioEfecto:
          type: number
    PostLoc:
      type: object
      properties:
        password:
          type: string
        latitud1:
          type: number
        longitud1:
          type: number
        latitud2:
          type: number
        longitud2:
          type: number
    PostIncidencia:
      type: object
      properties:
        nombreFenomeno:
          type: string
        latitud:
          type: number
        longitud:
          type: number
        fecha:
          type: string
        hora:
          type: string
    PostNotificacion:
      type: object
      properties:
        password:
          type: string
        latitud:
          type: number
        longitud:
          type: number
    PostRefugio:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        nombre:
          type: string
        latitud:
          type: number
        longitud:
          type: number
    PutRefugio:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        newnombre:
          type: string
        latitud:
          type: number
        longitud:
          type: number